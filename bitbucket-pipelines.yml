image: px4io/px4-dev-base-focal:2022-08-12   # PX4 dev container with older, more compatible toolchain

options:
  clone:
    depth: full
    submodules: true   # âœ… ensures submodules checkout to pinned commits

pipelines:
  default:
    - step:
        name: Build PX4 for v6C and v6X
        services:
          - docker
        caches:
          - docker
        script:
          - echo "ðŸ”„ Building PX4 firmware for Pixhawk 6C and 6X..."
          # Ensure ARM toolchain is in PATH
          - export PATH="/usr/lib/gcc/arm-none-eabi/bin:$PATH"
          - export PATH="/opt/gcc-arm-none-eabi/bin:$PATH"
          # Check if ARM toolchain is available
          - which arm-none-eabi-gcc || echo "ARM toolchain not found in standard locations"
          - arm-none-eabi-gcc --version || echo "ARM GCC not working, will try to install"
          # Install specific ARM toolchain version that matches local (9-2020-q2-update)
          - wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2020q2/gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2
          - tar -xjf gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2 -C /opt/
          - export PATH="/opt/gcc-arm-none-eabi-9-2020-q2-update/bin:$PATH"
          # Verify toolchain after installation
          - which arm-none-eabi-gcc && arm-none-eabi-gcc --version
          # Install required Python dependencies
          - pip3 install symforce
          # Set compiler flags to be less strict (allow warnings that would be errors)
          - export CXXFLAGS="-Wno-error" 
          - export CFLAGS="-Wno-error"
          - make px4_fmu-v6c_default
          - make px4_fmu-v6x_default
        artifacts:
          - build/px4_fmu-v6c_default/px4_fmu-v6c_default.px4
          - build/px4_fmu-v6x_default/px4_fmu-v6x_default.px4
