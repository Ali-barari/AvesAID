name: Checks

on:
  push:
    branches:
    - 'main'
    - 'avesaid-main'
  pull_request:
    branches:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        check: [
          "check_format",
          "check_newlines",
          "tests",
          "tests_coverage",
          "px4_fmu-v2_default stack_check",
          "validate_module_configs",
          "shellcheck_all",
          "NO_NINJA_BUILD=1 px4_fmu-v5_default",
          "NO_NINJA_BUILD=1 px4_sitl_default",
          "px4_sitl_allyes",
          "airframe_metadata",
          "module_documentation",
          "parameters_metadata",
        ]
    container:
      image: px4io/px4-dev-nuttx-focal:2022-08-12
      options: --privileged --ulimit core=-1 --security-opt seccomp=unconfined
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Initialize and update submodules with Avestec fork
      run: |
        # Force clean submodule state and ensure correct URL
        git submodule deinit -f src/modules/mavlink/mavlink || true
        git rm --cached src/modules/mavlink/mavlink || true
        rm -rf src/modules/mavlink/mavlink || true
        # Set correct submodule configuration  
        git config submodule.src/modules/mavlink/mavlink.url https://github.com/Avestec/mavlink.git
        git config submodule.src/modules/mavlink/mavlink.branch master
        # Initialize with correct fork
        git submodule update --init --recursive --force src/modules/mavlink/mavlink
        # Verify we're using the Avestec mavlink fork with SKYRON.xml
        cd src/modules/mavlink/mavlink
        echo "Current mavlink submodule info:"
        git remote -v
        git log --oneline -5
        # Check if SKYRON.xml exists
        if [ -f message_definitions/v1.0/SKYRON.xml ]; then
          echo "✅ SKYRON.xml found!"
          ls -la message_definitions/v1.0/SKYRON.xml
        else
          echo "❌ SKYRON.xml NOT found! Available message definitions:"
          ls -la message_definitions/v1.0/ | head -10
          exit 1
        fi

    - name: check environment
      run: |
          export
          ulimit -a
    - name: ${{matrix.check}}
      run: make ${{matrix.check}}
    - name: upload coverage
      if: contains(matrix.check, 'coverage')
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        file: coverage/lcov.info
